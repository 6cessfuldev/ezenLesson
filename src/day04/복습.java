package day04;

public class 복습 {

	public static void main(String[] args) {
		/*
		 * 1. 변수
		 * -일반변수(기본형) : 값을 저장하는 기본적인 메모리 공간
		 * 	1) 정수형 : int, byte, short, long(접미사 주의)
		 * 	2) 실수형 : double, float(접미사 주의), 
		 *  3) 문자형 : char(정수형으로 분류하기도 함 : 유니코드표 코드로 저장) 
		 *  4) 불리언 : boolean
		 *  
		 *  -참조변수 : 객체의 주소를 정하는 변수(객체명) : new 키워드 통해 객체 생성
		 *  -자료형변환 : 변수, 상수, 리터럴값들을 일시적으로 다른 자료형으로 변환
		 *  -자동 형변환 : 정수 -> 실수, 작은 바이트 -> 큰 바이트
		 *  -명시적 형변환 : (변환할 자료형)변수명
		 *  
		 * 2. 연산자
		 * 
		 * -대입 연산자(=)
		 * : 오른쪽에 있는 값을 왼쪽 변수에 저장한다.
		 * : 왼쪽에는 반드시 저장이 가능한 변수 혹은 객체가 와야한다.
		 * : 왼쪽과 오른쪽의 자료형은 반드시 같아야 한다.
		 * 
		 * - 산술연산자 ( + - * / %)
		 * : 정수 / 정수 => 정수, 0으로 나눌 수 없다.
		 * 
		 * -비교 연산자 ( >=, <=, <, ==, != )
		 * : 결과 항상 boolean
		 * : == (같은지 비교하는 연산자)
		 * 
		 * -논리 연산자 (&&, ||, !)
		 * - && : and 여려 개의 조건이 모두 맞으면 참
		 * - || : or 이게 맞거나 저게 맞으면 참
		 * - ! : 현재 조건의 반대  
		 *
		 *  -증감 연산자 (++, --) : 1씩 증가, 1씩 감소
		 *  -조건 선택 연산자 (조건식 ? true : false )
		 *  -조건식이 참이면 true 위치의 값, 거짓이면 false의 값이 입력됨
		 *  
		 *  3. 조건문 : 조건식이 참이면 해당 실행문을 실행
		 *  -if문, switch문
		 *  if(조건식){
		 *  실행문;
		 *  }
		 *  
		 *  if(조건식){
		 *  실행문;
		 *  } else {
		 *  실행문;
		 *  }
		 *  
		 *  if(조건식){
		 *  실행문;
		 *  } else if(조건식) {
		 *  실행문;
		 *  } 
		 *  
		 *  -switch문
		 *  switch( 변수or식 ){
		 *  case 변수와 비교할 값 : 
		 *  	실행문;
		 *  	break; // break 를 적지 않으면 이후 모든 case가 전부 실행됨.
		 *  
		 *  case 값2: 
		 *  	실행문;
		 *  	break;
		 *  ...
		 *  default : 
		 *  	실행문;
		 *  
		 *  4. 반복문 : 규칙성을 가지고 반복
		 *  
		 * -for문, while문, do~while문 
		 * -for(1초기화; 2조건식; 4증감식) {
		 * 3실행문;
		 * }
		 * 
		 * -while문 
		 * while(조건식(참이면 반복)){
		 * 실행문; // 실행문 안에서 조건식에서 사용한 변수가 수정되어 조건식의 값을 false로 만드는 작업을 해야 종료된다.
		 * }
		 *
		 *-do { // 최초 한번은 반드시 실행문이 실행된다.
		 *실행문;
		 *} while (조건식); //조건이 참이어야 반복
		 *
		 *-break;
		 *: 반복문을 빠져나가는 역할
		 *: if 문을 같이 동반
		 *
		 *-continue;
		 *: skip, pass 하는 역할
		 *: 조건이 맞을 때 실행하지 않고, 다음 증감으로 이동
		 *: while문에서의 countinue 이후에 증감식이 있다면 증감식을 생략할 수 있다는 것 주의!
		 *
		 *5. 배열
		 *: 동일한 자료형을 가진 데이터를 모아놓은 형태
		 *- 배열 선언(객체 선언)
		 *  자료형 배열명[];
		 *  자료형[] 배열명;
		 *- 배열 생성
		 *  자료형 배열명[] = new 자료형[길이]; 선언과 동시에 생성
		 *  배열명 = new 자료형[]; 이미 선언했던 변수에 객체 생성
		 *  배열의 index는 0부터 배열.length-1 까지 있다.
		 *  -배열.length : 배열의 총길이
		 *  -배열명[index] = 값; // 배열의 index에 값을 저장 
		 *  - 변수 = 배열명[index]; // 변수에 배열의 index에 해당하는 값을 대입
		 *  
		 */

		
	}

	
	
}
